name: Integration test

runs:
  using: "composite"
  steps:
  - name: Install Go
    uses: actions/setup-go@v5
    with:
      go-version: ${{ env.GO_VERSION }}
  - name: Setup Golang caches
    uses: actions/cache@v3
    with:
      path: |
        ~/.cache/go-build
        ~/go/pkg/mod
      key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
      restore-keys: |
        ${{ runner.os }}-golang-
  - name: Check out code into the Go module directory
    uses: actions/checkout@v4
    with:
      ref: ${{ github.event.pull_request.head.sha }}
  - uses: azure/setup-helm@v3
    with:
      version: 3.7.1
  - name: Install Kind
    uses: helm/kind-action@v1
    with:
      install_only: true
  - name: Run tests
    shell: bash
    run: |
      export GOPATH=$HOME/go
      export PATH=$PATH:$GOPATH/bin
      sudo mkdir -p /etc/docker
      jq '. += {"storage-driver":"vfs"}' > /etc/docker/daemon.json
      sudo systemctl restart docker.service
      kind create cluster --name osrm --config examples/kind-config.yaml
      kubectl create -f https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/deploy/example/nfs-provisioner/nfs-server.yaml
      helm repo add csi-driver-nfs https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/charts
      helm install csi-driver-nfs csi-driver-nfs/csi-driver-nfs --namespace kube-system --version v4.9.0
      kubectl create -f https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/deploy/example/storageclass-nfs.yaml
      kubectl wait --for condition=Available deployment/nfs-server --timeout=60s
      sleep 5
      kubectl logs $(kubectl get pods | grep nfs | awk '{print $1}')
      make install deploy
      kubectl -n osrm-system wait --for condition=Available deployment/osrm-controller-manager --timeout=60s
      make integration-test